#!/usr/bin/env tclsh
# vim:sts=4:sw=4:tw=80:et:ft=tcl 

namespace path [list ::tcl::mathop ::tcl::mathfunc]
package require fileutil
package require textutil
namespace import ::textutil::split*

proc get {i j} {
    lindex $::grid $i $j
}



proc run {input} {

    set in [open $input r]
    set data [read -nonewline $in]
    close $in

    global grid
    set grid [lmap r [split $data \n] {split $r {}}]
    set m [llength $grid]
    set n [llength [lindex $grid 0]]
    puts "$m $n"

    set vis 0

    for {set i 1} {$i < [- $m 1]} {incr i} {
        for {set j 1} {$j < [- $n 1]} {incr j} {
            set h [get $i $j]
            set bad 0

            #scan up
            set s [- $i 1]
            for {set k $s} {$k >= 0} {incr k -1} {
                set t [get $k $j]
                if {$t >= $h} {
                    incr bad
                    break
                }
            }

            #scan down
            set s [+ $i 1]
            for {set k $s} {$k < $m} {incr k } {
                set t [get $k $j]
                if {$t >= $h} {
                    incr bad
                    break
                }
            }
            
            #scan left
            set s [- $j 1]
            for {set k $s} {$k >= 0} {incr k -1} {
                set t [get $i $k]
                if {$t >= $h} {
                    incr bad
                    break
                }
            }

            #scan right
            set s [+ $j 1]
            for {set k $s} {$k < $n} {incr k } {
                set t [get $i $k]
                if {$t >= $h} {
                    incr bad
                    break
                }
            }

            if {$bad < 4} {
                puts "$i $j [get $i $j]"
                incr vis
            }
        }
    }
    puts $vis
    puts [+ $vis $m $m $n $n -4]

}

run [lindex $argv 0]
