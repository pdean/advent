#!/usr/bin/env tclsh
# vim:sts=4:sw=4:tw=80:et:ft=tcl 

namespace path [list ::tcl::mathop ::tcl::mathfunc]

set dp {-1 0 0  1 0 0
        0 -1 0  0 1 0
        0 0 -1  0 0 1}

proc nb {p} {
    global minv maxv dp

    set nb [list]
    lassign $p x y z
    foreach {dx dy dz} $dp {
       set nx [+ $x $dx] 
       set ny [+ $y $dy] 
       set nz [+ $z $dz] 
       if {[min $nx $ny $nz] < $minv} continue
       if {[max $nx $ny $nz] > $maxv} continue
       lappend nb [list $nx $ny $nz]
   }
   return $nb
}

proc run {} {
    global minv maxv dp

    set data [read -nonewline stdin]
    set cubes [lmap l [split $data \n] {split $l ,}]
    foreach cube $cubes { dict incr drop $cube }

    set minv [- [min {*}[concat {*}$cubes]] 1]
    set maxv [+ [max {*}[concat {*}$cubes]] 1]
    puts "$minv $maxv"

    set faces [* 6 [llength $cubes]]

    foreach cube $cubes {
        foreach n [nb $cube] {
            if {[dict exists $drop $n]} {
                incr faces -1
            }
        }
    }
    puts $faces
}

run
