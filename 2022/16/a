#!/usr/bin/env tclsh
# vim:sts=4:sw=4:tw=80:et:ft=tcl 

namespace path [list ::tcl::mathop ::tcl::mathfunc]
package require struct::graph::op
package require struct::set


proc run {} {

    set data [read -nonewline stdin]
    set data [string map {; " " , " " = " "} $data]

    struct::graph cave

    foreach line [split $data \n] {
        set valve [lindex $line 1]
        set rate [lindex $line 5]
        set valves [lrange $line 10 end]
        puts "$valve $rate $valves"


        if {$rate != 0} {
            struct::set include destv $valve
        }

        if {![cave node exists $valve]} {
            cave node insert $valve
        }
        foreach v $valves {
            if {![cave node exists $v]} {
                cave node insert $v
            }
            cave arc insert $valve $v
        }
    }
    cave arc setunweighted 1

    set org AA
    foreach dest $destv {
        set dist [::struct::graph::op::distance cave $org $dest]

        puts "$org $dest $dist"
    }
        


}

run
