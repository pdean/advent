#!/usr/bin/env tclsh
# vim:sts=4:sw=4:tw=80:et:ft=tcl 

namespace path [list ::tcl::mathop ::tcl::mathfunc]
package require fileutil
package require textutil
namespace import ::textutil::split*

proc run {input} {
    set in [open $input r]
    set data [read -nonewline $in]
    close $in
    set maxy 0
    foreach line [split $data \n] {
        set pts [string map {{->} { } {,} { }} $line]
        puts $pts
        set rest [lassign $pts x0 y0]
        dict incr map $x0,$y0
        foreach {x1 y1} $rest {
            set maxy [max $maxy $y0 $y1]
            set dx [- $x1 $x0]
            set dy [- $y1 $y0]
            if {$dx} {
                set sx [/ $dx [abs $dx]]
                while {$x0 != $x1} {
                    incr x0 $sx
                    dict incr map $x0,$y0
                }
            }
            if {$dy} {
                set sy [/ $dy [abs $dy]]
                while {$y0 != $y1} {
                    incr y0 $sy
                    dict incr map $x0,$y0
                }
            }
        }
        set x0 $x1
        set y0 $y1
    }
    puts [lsort [dict keys $map]]
    puts $maxy

exit
    set n 0
    while 1 {
        set x0 500
        set y0 0

    }

}

run [lindex $argv 0]
