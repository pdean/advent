#!/usr/bin/env tclsh
# vim:sts=4:sw=4:tw=80:et:ft=tcl 

namespace path [list ::tcl::mathop ::tcl::mathfunc]

proc run {bound} {

    set data [read -nonewline stdin]
    set lines [lmap l [split $data \n] {
        regsub -all {[^-0-9]} $l { } }]

    set sc [list]
    set ka [list]
    set kb [list]

    foreach l $lines {
        lassign $l sx sy bx by
        set r [+ [abs [- $bx $sx]] [abs [- $by $sy]]]
        lappend sc $sx $sy $r
        lappend ka [+ $sy -$sx  $r  1]
        lappend ka [+ $sy -$sx -$r -1]
        lappend kb [+ $sx  $sy  $r  1]
        lappend kb [+ $sx  $sy -$r -1]
    }
    puts $sc
    puts $ka 
    puts $kb

    foreach a $ka {
        foreach b $kb {
            puts "  $a $b"
            set x [+ $b -$a]
            if {$x % 2} continue
            set y [+ $a $b]
            if {$y % 2} continue
            set x [/ $x 2]
            set y [/ $y 2]
            if {![< 0 $x $bound]} continue
            if {![< 0 $y $bound]} continue
            puts "$x $y"
            continue
            set fail false
            foreach {sx sy r} $sc {
                set rs [+ [abs [- $x $sx]] [abs [- $y $sy]]]
                puts "$r $rs"
                if {$r >= $rs} {
                    set fail true
                    break
                }
            }
            if {!$fail} {
                puts "$x $y"
                exit
            }
        }
    }
}

run [lindex $argv 0]
