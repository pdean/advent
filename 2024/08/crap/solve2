#!/usr/bin/perl

use v5.38;
use feature qw(multidimensional);
use Data::Dumper;

@ARGV = shift // "input";

my $solution_1 = 0;
my $solution_2 = 0;

my ( %ant, %node );

my $grid = [ map { [/./g] } <> ];
my $C    = @{ $$grid[0] } - 1;
my $R    = @$grid - 1;

for my $r ( 0 .. $R ) {
    for my $c ( 0 .. $C ) {
        my $a = $$grid[$r][$c];
        if ( $a ne "." ) {
            push @{ $ant{$a} }, [ $r, $c ];
        }
    }
}

for my $k ( keys %ant ) {
    my @a = @{ $ant{$k} };
    next if @a < 2;
    for my $i ( 0 .. $#a ) {
        for my $j ( 0 .. $#a ) {
            next if $i == $j;
            my ( $ri, $ci ) = @{ $a[$i] };
            my ( $rj, $cj ) = @{ $a[$j] };
            my $rn = $rj + $rj - $ri;
            my $cn = $cj + $cj - $ci;
            if (   0 <= $rn <= $R
                && 0 <= $cn <= $C )
            {
                $node{$rn,$cn}++;
            }
        }
    }
}

$solution_1 = keys %node;

say "Solution 1: $solution_1";
say "Solution 2: $solution_2";

# vim:ft=perl:sts=4:sw=4:et
